{
  "name": "@arken/portal-desktop",
  "version": "1.0.0",
  "description": "Return Portal",
  "keywords": [
    "electron",
    "react",
    "typescript",
    "ts",
    "webpack"
  ],
  "homepage": "https://github.com/arkenrealms/portal",
  "bugs": {
    "url": "https://github.com/arkenrealms/portal/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/arkenrealms/portal.git"
  },
  "license": "MIT",
  "author": {
    "name": "Arken Technologies",
    "email": "hello@arken.gg",
    "url": "https://arken.gg"
  },
  "contributors": [
    {
      "name": "hashwarp",
      "email": "yo@hashwarp.com",
      "url": "https://github.com/hashwarp"
    }
  ],
  "main": "./src/main/main.ts",
  "scripts": {
    "build": "concurrently \"npm run build:main\" \"npm run build:renderer\"",
    "build:dll": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.dev.dll.ts",
    "build:main": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.main.prod.ts",
    "build:renderer": "cross-env NODE_ENV=production TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.renderer.prod.ts",
    "postinstall2": "ts-node .erb/scripts/check-native-dep.js && electron-builder install-app-deps && npm run build:dll",
    "lint": "cross-env NODE_ENV=development eslint . --ext .js,.jsx,.ts,.tsx",
    "package": "ts-node ./.erb/scripts/clean.js dist && npm run build && electron-builder build --publish never && npm run build:dll",
    "package:win": "ts-node ./.erb/scripts/clean.js dist && npm run build && electron-builder build --win --publish never && npm run build:dll",
    "rebuild": "electron-rebuild --parallel --types prod,dev,optional --module-dir release/app",
    "dev": "ts-node ./.erb/scripts/check-port-in-use.js && npm run start:renderer",
    "start:main": "cross-env NODE_ENV=development electronmon -r ts-node/register/transpile-only .",
    "start:preload": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack --config ./.erb/configs/webpack.config.preload.dev.ts",
    "start:renderer": "cross-env NODE_ENV=development TS_NODE_TRANSPILE_ONLY=true webpack serve --config ./.erb/configs/webpack.config.renderer.dev.ts",
    "test": "jest"
  },
  "browserslist": [],
  "prettier": {
    "singleQuote": true,
    "overrides": [
      {
        "files": [
          ".prettierrc",
          ".eslintrc"
        ],
        "options": {
          "parser": "json"
        }
      }
    ]
  },
  "jest": {
    "moduleDirectories": [
      "node_modules",
      "release/app/node_modules",
      "src"
    ],
    "moduleFileExtensions": [
      "js",
      "jsx",
      "ts",
      "tsx",
      "json"
    ],
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/.erb/mocks/fileMock.js",
      "\\.(css|less|sass|scss)$": "identity-obj-proxy"
    },
    "setupFiles": [
      "./.erb/scripts/check-build-exists.ts"
    ],
    "testEnvironment": "jsdom",
    "testEnvironmentOptions": {
      "url": "http://localhost/"
    },
    "testPathIgnorePatterns": [
      "release/app/dist",
      ".erb/dll"
    ],
    "transform": {
      "\\.(ts|tsx|js|jsx)$": "ts-jest"
    }
  },
  "dependencies": {
    "@electron/notarize": "^2",
    "electron-debug": "^3",
    "electron-log": "^4",
    "electron-updater": "^6",
    "react": "^18",
    "react-dom": "^18",
    "react-router-dom": "^6",
    "source-map-support": "~0.5.21"
  },
  "devDependencies": {
    "@electron/rebuild": "^3",
    "@pmmmwh/react-refresh-webpack-plugin": "^0",
    "@svgr/webpack": "^8",
    "@teamsupercell/typings-for-css-modules-loader": "^2",
    "@testing-library/jest-dom": "^6",
    "@testing-library/react": "^14",
    "@types/jest": "^29",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/react-test-renderer": "^18",
    "@types/webpack-bundle-analyzer": "^4",
    "@typescript-eslint/eslint-plugin": "^8",
    "@typescript-eslint/parser": "^8",
    "browserslist-config-erb": "^0",
    "chalk": "^4",
    "concurrently": "^8",
    "core-js": "^3",
    "cross-env": "^7",
    "css-loader": "^5",
    "css-minimizer-webpack-plugin": "^5",
    "detect-port": "^1",
    "electron": "^26",
    "electron-builder": "^24",
    "electron-devtools-installer": "^3",
    "electronmon": "^2",
    "eslint": "^8",
    "eslint-config-airbnb-base": "^15",
    "eslint-config-erb": "^4",
    "eslint-import-resolver-typescript": "^3",
    "eslint-import-resolver-webpack": "^0",
    "eslint-plugin-compat": "^4",
    "eslint-plugin-import": "^2",
    "eslint-plugin-jest": "^27",
    "eslint-plugin-jsx-a11y": "^6",
    "eslint-plugin-promise": "^5",
    "eslint-plugin-react": "^7",
    "eslint-plugin-react-hooks": "^4",
    "file-loader": "^6",
    "html-webpack-plugin": "^5",
    "identity-obj-proxy": "^3",
    "jest": "^29",
    "jest-environment-jsdom": "^29",
    "mini-css-extract-plugin": "^2",
    "prettier": "^3",
    "react-refresh": "^0",
    "react-test-renderer": "^18",
    "rimraf": "^5",
    "sass": "^1",
    "sass-loader": "^13",
    "style-loader": "^3",
    "terser-webpack-plugin": "^5",
    "ts-jest": "^29",
    "ts-loader": "^9",
    "ts-node": "^10",
    "tsconfig-paths-webpack-plugin": "^4",
    "typescript": "^5",
    "url-loader": "^4",
    "webpack": "^5",
    "webpack-bundle-analyzer": "^4",
    "webpack-cli": "^5",
    "webpack-dev-server": "^5",
    "webpack-merge": "^5"
  },
  "build": {
    "productName": "Portal",
    "appId": "gg.return.Portal",
    "asar": true,
    "asarUnpack": "**\\*.{node,dll}",
    "files": [
      "dist",
      "node_modules",
      "package.json"
    ],
    "mac": {
      "sign": ".erb/scripts/notarize.js",
      "notarize": false,
      "target": [
        "zip",
        "dmg"
      ],
      "icon": "assets/Icon-512.png",
      "type": "distribution",
      "hardenedRuntime": true,
      "entitlements": "assets/entitlements.mac.plist",
      "entitlementsInherit": "assets/entitlements.mac.plist",
      "gatekeeperAssess": false,
      "category": "public.app-category.entertainment"
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "win": {
      "asar": false,
      "asarUnpack": "**\\*.node2",
      "icon": "assets/Icon-512.ico",
      "target": [
        {
          "target": "nsis",
          "arch": [
            "x64"
          ]
        }
      ]
    },
    "linux": {
      "icon": "assets/Icon-512.png",
      "target": [
        {
          "target": "AppImage",
          "arch": [
            "x64"
          ]
        },
        {
          "target": "deb",
          "arch": [
            "x64",
            "ia32"
          ]
        },
        {
          "target": "tar.gz",
          "arch": [
            "x64",
            "ia32"
          ]
        }
      ],
      "synopsis": "Portal",
      "category": "Entertainment"
    },
    "directories": {
      "app": "release/app",
      "buildResources": "assets",
      "output": "release/build"
    },
    "extraResources": [
      "./assets/**"
    ],
    "publish": [
      {
        "provider": "github",
        "owner": "arkenrealms",
        "repo": "portal"
      }
    ],
    "copyright": "Return Portal ðŸŒ€ by Arken Technologies",
    "removePackageScripts": false,
    "generateUpdatesFilesForAllChannels": true,
    "buildDependenciesFromSource": false,
    "nodeGypRebuild": false,
    "detectUpdateChannel": true,
    "compression": "normal",
    "npmRebuild": true,
    "appx": {
      "identityName": "Portal",
      "publisher": "CN=Arken Technologies Inc, O=Arken Technologies Inc, L=Talinn, S=Talinn, C=EE",
      "publisherDisplayName": "Arken Technologies Inc",
      "backgroundColor": "#34262A"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": "true",
      "deleteAppDataOnUninstall": "true",
      "createDesktopShortcut": "always",
      "installerIcon": "assets/Icon-512.ico",
      "perMachine": true,
      "artifactName": "Portal-Setup-${version}.${ext}"
    }
  },
  "devEngines": {
    "node": ">=14.x",
    "npm": ">=7.x"
  },
  "electronmon": {
    "patterns": [
      "!**/**",
      "src/main/**"
    ],
    "logLevel": "quiet"
  }
}
